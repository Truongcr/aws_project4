name: Frontend CD

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend
    strategy:
      matrix:
        node-version: ["18.x"]
    steps:
      - uses: actions/checkout@v4
      - name: setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend
    strategy:
      matrix:
        node-version: ["18.x"]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./starter/frontend/package-lock.json"
      - run: npm ci
      - run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend
    outputs:
      repo-image-name: ${{ steps.build-push-image.outputs.repo-image-name }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.TOKEN }}
          aws-region: ${{ secrets.REGION }}
      - name: Login to Amazon ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, push image
        env:
          REGISTRY: ${{ steps.login.outputs.registry }}
          REPOSITORY_FE: ${{ vars.ECR_REPOSITORY_FE }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY_FE:${{ github.sha }} -t $REGISTRY/$REPOSITORY_FE:latest --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 .
          docker push $REGISTRY/$REPOSITORY_FE:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.TOKEN }}
          aws-region: ${{ secrets.REGION }}
      - name: Update kubeconfig file
        run: |
          aws sts get-caller-identity
          aws eks --region ${{ secrets.REGION }} update-kubeconfig --name cluster
          kubectl config current-context
      - name: Login to AmazonECR
        id: login
        uses: aws-actions/amazon-ecr-login@v2
      - name: Apply
        run: |
          cd ./starter/frontend/k8s
          kustomize edit set image frontend=${{ steps.login.outputs.registry }}/${{ vars.ECR_REPOSITORY_FE }}:${{ github.sha }}
          kustomize build | kubectl apply -f -

#Test
